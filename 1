-- Version: 2.0.
-- Made by chrisopdemobiel.

-- Instances:

local himansoyeah = Instance.new("ScreenGui")
local Toggle = Instance.new("ImageButton")
local Modules = Instance.new("Folder")
local Configurations = Instance.new("Folder")
local BlurControl = Instance.new("Configuration")
local ExecutionMethod = Instance.new("Configuration")
local ImageLabel = Instance.new("ImageLabel")

--Properties:

himansoyeah.Name = "hi man so yeah"
himansoyeah.Parent = game.Workspace.MainModule.Folder["!"]
himansoyeah.Enabled = false
himansoyeah.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
himansoyeah.DisplayOrder = 99999
himansoyeah.ResetOnSpawn = false

Toggle.Name = "Toggle"
Toggle.Parent = himansoyeah
Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Toggle.BackgroundTransparency = 1.000
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.481000006, 0, 0.933000028, 0)
Toggle.Size = UDim2.new(0.0373352841, 0, 0.0456323326, 0)
Toggle.ZIndex = 2
Toggle.AutoButtonColor = false
Toggle.Image = "rbxassetid://140132316900573"
Toggle.ScaleType = Enum.ScaleType.Fit

Modules.Name = "Modules"
Modules.Parent = himansoyeah

Configurations.Name = "Configurations"
Configurations.Parent = himansoyeah

BlurControl.Name = "BlurControl"
BlurControl.Parent = Configurations

ExecutionMethod.Name = "ExecutionMethod"
ExecutionMethod.Parent = Configurations

ImageLabel.Parent = himansoyeah
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(1, 0, 0.748000026, 0)
ImageLabel.Size = UDim2.new(0.581311584, 0, 0.287272185, 0)
ImageLabel.ZIndex = 0
ImageLabel.Image = "rbxassetid://186491278"
ImageLabel.ImageTransparency = 0.300

-- Module Scripts:

local fake_module_scripts = {}

do -- Modules.Syntax
local script = Instance.new('ModuleScript', Modules)
script.Name = "Syntax"
local function module_script()
local highlighter = {}

	local keywords = {
		lua = {
			"and", "break", "or", "else", "elseif", "if", "then", "until", "repeat", "while", "do", "for", "in",
			"local", "return", "function", "export","ClientEntity","require","end"
		},
		rbx = {
			"game", "workspace", "script", "math", "string", "table", "task", "wait", "select", "next", "Enum",
			"error", "warn", "tick", "assert", "shared", "loadstring", "tonumber", "tostring", "type",
			"typeof", "unpack", "print", "Instance", "CFrame", "Vector3", "Vector2", "Color3", "UDim", "UDim2", "Ray", "BrickColor",
			"OverlapParams", "RaycastParams", "Axes", "Random", "Region3", "Rect", "TweenInfo",
			"collectgarbage", "not", "utf8", "pcall", "xpcall", "_G", "setmetatable", "getmetatable", "os", "pairs", "ipairs"
		},
		operators = {
			"#", "+", "-", "*", "%", "/", "^", "=", "~", "=", "<", ">", ",", ".", "(", ")", "{", "}", "[", "]", ";", ":"
		}
	}
	
	local colors = {
		numbers = Color3.fromRGB(255, 198, 0),
		boolean = Color3.fromRGB(255, 198, 0),
		operator = Color3.fromRGB(204, 204, 204),
		lua = Color3.fromRGB(160, 87, 248),
		rbx = Color3.fromRGB(97, 161, 241),
		str = Color3.fromRGB(173, 241, 149),
		comment = Color3.fromRGB(102, 102, 102),
		null = Color3.fromRGB(79, 79, 79),
		call = Color3.fromRGB(130, 170, 255),
		self_call = Color3.fromRGB(227, 201, 141),
		local_color = Color3.fromRGB(248, 109, 124),
		function_color = Color3.fromRGB(248, 109, 124),
		self_color = Color3.fromRGB(248, 109, 124),
		local_property = Color3.fromRGB(97, 161, 241),
	}
	
	local function createKeywordSet(keywords)
		local keywordSet = {}
		for _, keyword in ipairs(keywords) do
			keywordSet[keyword] = true
		end
		return keywordSet
	end
	
	local luaSet = createKeywordSet(keywords.lua)
	local rbxSet = createKeywordSet(keywords.rbx)
	local operatorsSet = createKeywordSet(keywords.operators)
	
	local function getHighlight(tokens, index)
		local token = tokens[index]
	
		if colors[token .. "_color"] then
			return colors[token .. "_color"]
		end
	
		if tonumber(token) then
			return colors.numbers
		elseif token == "nil" then
			return colors.null
		elseif token:sub(1, 2) == "--" then
			return colors.comment
		elseif operatorsSet[token] then
			return colors.operator
		elseif luaSet[token] then
			return colors.rbx
		elseif rbxSet[token] then
			return colors.lua
		elseif token:sub(1, 1) == "\"" or token:sub(1, 1) == "\'" then
			return colors.str
		elseif token == "true" or token == "false" then
			return colors.boolean
		end
	
		if tokens[index + 1] == "(" then
			if tokens[index - 1] == ":" then
				return colors.self_call
			end
	
			return colors.call
		end
	
		if tokens[index - 1] == "." then
			if tokens[index - 2] == "Enum" then
				return colors.rbx
			end
	
			return colors.local_property
		end
	end
	
	function highlighter.run(source)
		local tokens = {}
		local currentToken = ""
	
		local inString = false
		local inComment = false
		local commentPersist = false
	
		for i = 1, #source do
			local character = source:sub(i, i)
	
			if inComment then
				if character == "\n" and not commentPersist then
					table.insert(tokens, currentToken)
					table.insert(tokens, character)
					currentToken = ""
	
					inComment = false
				elseif source:sub(i - 1, i) == "]]" and commentPersist then
					currentToken ..= "]"
	
					table.insert(tokens, currentToken)
					currentToken = ""
	
					inComment = false
					commentPersist = false
				else
					currentToken = currentToken .. character
				end
			elseif inString then
				if character == inString and source:sub(i-1, i-1) ~= "\\" or character == "\n" then
					currentToken = currentToken .. character
					inString = false
				else
					currentToken = currentToken .. character
				end
			else
				if source:sub(i, i + 1) == "--" then
					table.insert(tokens, currentToken)
					currentToken = "-"
					inComment = true
					commentPersist = source:sub(i + 2, i + 3) == "[["
				elseif character == "\"" or character == "\'" then
					table.insert(tokens, currentToken)
					currentToken = character
					inString = character
				elseif operatorsSet[character] then
					table.insert(tokens, currentToken)
					table.insert(tokens, character)
					currentToken = ""
				elseif character:match("[%w_]") then
					currentToken = currentToken .. character
				else
					table.insert(tokens, currentToken)
					table.insert(tokens, character)
					currentToken = ""
				end
			end
		end
	
		table.insert(tokens, currentToken)
	
		local highlighted = {}
	
		for i, token in ipairs(tokens) do
			local highlight = getHighlight(tokens, i)
	
			if highlight then
				local syntax = string.format("<font color = \"#%s\">%s</font>", highlight:ToHex(), token:gsub("<", "&lt;"):gsub(">", "&gt;"))
	
				table.insert(highlighted, syntax)
			else
				table.insert(highlighted, token)
			end
		end
	
		return table.concat(highlighted)
	end
	
	return highlighter
end
fake_module_scripts[script] = module_script
end

-- Scripts:

local function MSWH_fake_script() -- Toggle.LocalScript
local script = Instance.new('LocalScript', Toggle)
local req = require
local require = function(obj)
local fake = fake_module_scripts[obj]
if fake then
return fake()
end
return req(obj)
end

-- {0.481, 0},{0.854, 0}

local e,t = false,game.TweenService;
local d = TweenInfo.new(.4,Enum.EasingStyle.Circular,Enum.EasingDirection.InOut);
local b = script:FindFirstAncestorOfClass("ScreenGui").Background;
local z = Instance.new("BlurEffect",game.Lighting);
script.Parent.Parent.Configurations.Blur.Value = z
z.Size = 0
local c = workspace.CurrentCamera;

script.Parent.MouseButton1Click:Connect(function()
	if not e then
		b.Visible = true
		t:Create(b,d,{GroupTransparency = 0}):Play()
		t:Create(b.Bar,d,{Position = UDim2.new(0.295, 0,0.87, 0)}):Play()
		t:Create(script.Parent,d,{Position = UDim2.new(0.481, 0,0.821, 0)}):Play()
		t:Create(z,d,{Size = 32}):Play()
		t:Create(c,d,{FieldOfView = 40}):Play()
		e = true
		
	elseif e then
		t:Create(b,d,{GroupTransparency = 1}):Play()
		t:Create(b.Bar,d,{Position = UDim2.new(0.295, 0,0.976, 0)}):Play()
		t:Create(script.Parent,d,{Position = UDim2.new(0.481, 0,0.933, 0)}):Play()
		t:Create(z,d,{Size = 0}):Play()
		t:Create(c,d,{FieldOfView = 70}):Play()
		e = false
		task.wait(.3)
		b.Visible = false
	end
end)
end
coroutine.wrap(MSWH_fake_script)()
local function BCBW_fake_script() -- Configurations.LiveFX
local script = Instance.new('LocalScript', Configurations)
local req = require
local require = function(obj)
local fake = fake_module_scripts[obj]
if fake then
return fake()
end
return req(obj)
end

do while task.wait() do
		if script.Parent.BlurControl:GetAttribute("EnableBlurFX") == true then
			script.Parent.Blur.Value.Enabled = true
		elseif script.Parent.BlurControl:GetAttribute("EnableBlurFX") == false then
			script.Parent.Blur.Value.Enabled = false
		end
	end
end
end
coroutine.wrap(BCBW_fake_script)()
local function RXJTB_fake_script() -- himansoyeah.Pop-in
local script = Instance.new('LocalScript', himansoyeah)
local req = require
local require = function(obj)
local fake = fake_module_scripts[obj]
if fake then
return fake()
end
return req(obj)
end

local tween = game:GetService("TweenService");

tween:Create(script.Parent.CanvasGroup,TweenInfo.new(2,Enum.EasingStyle.Circular,Enum.EasingDirection.InOut),{Position = UDim2.new(0.587, 0,0.82, 0)}):Play();
tween:Create(script.Parent.ImageLabel,TweenInfo.new(2,Enum.EasingStyle.Circular,Enum.EasingDirection.InOut),{Position = UDim2.new(0.494, 0,0.748, 0)}):Play()

while script:FindFirstAncestorOfClass("ScreenGui"):FindFirstAncestorOfClass("Player")  do
	script.Parent.Name = game.HttpService:GenerateGUID(false)
	task.wait(.05)
end
end
coroutine.wrap(RXJTB_fake_script)()
local function NRKN_fake_script() -- himansoyeah.Script
local script = Instance.new('Script', himansoyeah)
local req = require
local require = function(obj)
local fake = fake_module_scripts[obj]
if fake then
return fake()
end
return req(obj)
end

local int = script.Parent.TidalReallyIsThatGoodDudeLolll;

int.OnServerEvent:Connect(function(plr)
	plr:Kick("Gtfo skid")
end)

while task.wait(0.004) do
	int.Name = game.HttpService:GenerateGUID()
end
end
coroutine.wrap(NRKN_fake_script)()
